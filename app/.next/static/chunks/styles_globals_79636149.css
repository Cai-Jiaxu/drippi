/* [project]/styles/globals.css [client] (css) */
*, :before, :after, ::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x: ;
  --tw-pan-y: ;
  --tw-pinch-zoom: ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position: ;
  --tw-gradient-via-position: ;
  --tw-gradient-to-position: ;
  --tw-ordinal: ;
  --tw-slashed-zero: ;
  --tw-numeric-figure: ;
  --tw-numeric-spacing: ;
  --tw-numeric-fraction: ;
  --tw-ring-inset: ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: #3b82f680;
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur: ;
  --tw-brightness: ;
  --tw-contrast: ;
  --tw-grayscale: ;
  --tw-hue-rotate: ;
  --tw-invert: ;
  --tw-saturate: ;
  --tw-sepia: ;
  --tw-drop-shadow: ;
  --tw-backdrop-blur: ;
  --tw-backdrop-brightness: ;
  --tw-backdrop-contrast: ;
  --tw-backdrop-grayscale: ;
  --tw-backdrop-hue-rotate: ;
  --tw-backdrop-invert: ;
  --tw-backdrop-opacity: ;
  --tw-backdrop-saturate: ;
  --tw-backdrop-sepia: ;
  --tw-contain-size: ;
  --tw-contain-layout: ;
  --tw-contain-paint: ;
  --tw-contain-style: ;
}

*, :before, :after {
  box-sizing: border-box;
  border: 0 solid #e5e7eb;
}

:before, :after {
  --tw-content: "";
}

html, :host {
  -webkit-text-size-adjust: 100%;
  -moz-tab-size: 4;
  -o-tab-size: 4;
  tab-size: 4;
  font-feature-settings: normal;
  font-variation-settings: normal;
  -webkit-tap-highlight-color: transparent;
  font-family: ui-sans-serif, system-ui, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji;
  line-height: 1.5;
}

body {
  line-height: inherit;
  margin: 0;
}

hr {
  height: 0;
  color: inherit;
  border-top-width: 1px;
}

abbr:where([title]) {
  text-decoration: underline dotted;
}

h1, h2, h3, h4, h5, h6 {
  font-size: inherit;
  font-weight: inherit;
}

a {
  color: inherit;
  text-decoration: inherit;
}

b, strong {
  font-weight: bolder;
}

code, kbd, samp, pre {
  font-feature-settings: normal;
  font-variation-settings: normal;
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace;
  font-size: 1em;
}

small {
  font-size: 80%;
}

sub, sup {
  vertical-align: baseline;
  font-size: 75%;
  line-height: 0;
  position: relative;
}

sub {
  bottom: -.25em;
}

sup {
  top: -.5em;
}

table {
  text-indent: 0;
  border-color: inherit;
  border-collapse: collapse;
}

button, input, optgroup, select, textarea {
  font-feature-settings: inherit;
  font-variation-settings: inherit;
  font-family: inherit;
  font-size: 100%;
  font-weight: inherit;
  line-height: inherit;
  letter-spacing: inherit;
  color: inherit;
  margin: 0;
  padding: 0;
}

button, select {
  text-transform: none;
}

button, input:where([type="button"]), input:where([type="reset"]), input:where([type="submit"]) {
  -webkit-appearance: button;
  background-color: #0000;
  background-image: none;
}

:-moz-focusring {
  outline: auto;
}

:-moz-ui-invalid {
  box-shadow: none;
}

progress {
  vertical-align: baseline;
}

::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
  height: auto;
}

[type="search"] {
  -webkit-appearance: textfield;
  outline-offset: -2px;
}

::-webkit-search-decoration {
  -webkit-appearance: none;
}

::-webkit-file-upload-button {
  -webkit-appearance: button;
  font: inherit;
}

summary {
  display: list-item;
}

blockquote, dl, dd, h1, h2, h3, h4, h5, h6, hr, figure, p, pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol, ul, menu {
  margin: 0;
  padding: 0;
  list-style: none;
}

dialog {
  padding: 0;
}

textarea {
  resize: vertical;
}

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  color: #9ca3af;
}

input::placeholder, textarea::placeholder {
  opacity: 1;
  color: #9ca3af;
}

button, [role="button"] {
  cursor: pointer;
}

:disabled {
  cursor: default;
}

img, svg, video, canvas, audio, iframe, embed, object {
  vertical-align: middle;
  display: block;
}

img, video {
  max-width: 100%;
  height: auto;
}

[hidden]:where(:not([hidden="until-found"])) {
  display: none;
}

:where(:root), :root:has(input.theme-controller[value="light"]:checked), [data-theme="light"] {
  color-scheme: light;
  --color-base-100: oklch(100% 0 0);
  --color-base-200: oklch(98% 0 0);
  --color-base-300: oklch(95% 0 0);
  --color-base-content: oklch(21% .006 285.885);
  --color-primary: oklch(45% .24 277.023);
  --color-primary-content: oklch(93% .034 272.788);
  --color-secondary: oklch(65% .241 354.308);
  --color-secondary-content: oklch(94% .028 342.258);
  --color-accent: oklch(77% .152 181.912);
  --color-accent-content: oklch(38% .063 188.416);
  --color-neutral: oklch(14% .005 285.823);
  --color-neutral-content: oklch(92% .004 286.32);
  --color-info: oklch(74% .16 232.661);
  --color-info-content: oklch(29% .066 243.157);
  --color-success: oklch(76% .177 163.223);
  --color-success-content: oklch(37% .077 168.94);
  --color-warning: oklch(82% .189 84.429);
  --color-warning-content: oklch(41% .112 45.904);
  --color-error: oklch(71% .194 13.428);
  --color-error-content: oklch(27% .105 12.094);
  --radius-selector: .5rem;
  --radius-field: .25rem;
  --radius-box: .5rem;
  --size-selector: .25rem;
  --size-field: .25rem;
  --border: 1px;
  --depth: 1;
  --noise: 0;
}

@media (prefers-color-scheme: dark) {
  :root {
    color-scheme: dark;
    --color-base-100: oklch(25.33% .016 252.42);
    --color-base-200: oklch(23.26% .014 253.1);
    --color-base-300: oklch(21.15% .012 254.09);
    --color-base-content: oklch(97.807% .029 256.847);
    --color-primary: oklch(58% .233 277.117);
    --color-primary-content: oklch(96% .018 272.314);
    --color-secondary: oklch(65% .241 354.308);
    --color-secondary-content: oklch(94% .028 342.258);
    --color-accent: oklch(77% .152 181.912);
    --color-accent-content: oklch(38% .063 188.416);
    --color-neutral: oklch(14% .005 285.823);
    --color-neutral-content: oklch(92% .004 286.32);
    --color-info: oklch(74% .16 232.661);
    --color-info-content: oklch(29% .066 243.157);
    --color-success: oklch(76% .177 163.223);
    --color-success-content: oklch(37% .077 168.94);
    --color-warning: oklch(82% .189 84.429);
    --color-warning-content: oklch(41% .112 45.904);
    --color-error: oklch(71% .194 13.428);
    --color-error-content: oklch(27% .105 12.094);
    --radius-selector: .5rem;
    --radius-field: .25rem;
    --radius-box: .5rem;
    --size-selector: .25rem;
    --size-field: .25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}

:root:has(input.theme-controller[value="light"]:checked), [data-theme="light"] {
  color-scheme: light;
  --color-base-100: oklch(100% 0 0);
  --color-base-200: oklch(98% 0 0);
  --color-base-300: oklch(95% 0 0);
  --color-base-content: oklch(21% .006 285.885);
  --color-primary: oklch(45% .24 277.023);
  --color-primary-content: oklch(93% .034 272.788);
  --color-secondary: oklch(65% .241 354.308);
  --color-secondary-content: oklch(94% .028 342.258);
  --color-accent: oklch(77% .152 181.912);
  --color-accent-content: oklch(38% .063 188.416);
  --color-neutral: oklch(14% .005 285.823);
  --color-neutral-content: oklch(92% .004 286.32);
  --color-info: oklch(74% .16 232.661);
  --color-info-content: oklch(29% .066 243.157);
  --color-success: oklch(76% .177 163.223);
  --color-success-content: oklch(37% .077 168.94);
  --color-warning: oklch(82% .189 84.429);
  --color-warning-content: oklch(41% .112 45.904);
  --color-error: oklch(71% .194 13.428);
  --color-error-content: oklch(27% .105 12.094);
  --radius-selector: .5rem;
  --radius-field: .25rem;
  --radius-box: .5rem;
  --size-selector: .25rem;
  --size-field: .25rem;
  --border: 1px;
  --depth: 1;
  --noise: 0;
}

:root:has(input.theme-controller[value="dark"]:checked), [data-theme="dark"] {
  color-scheme: dark;
  --color-base-100: oklch(25.33% .016 252.42);
  --color-base-200: oklch(23.26% .014 253.1);
  --color-base-300: oklch(21.15% .012 254.09);
  --color-base-content: oklch(97.807% .029 256.847);
  --color-primary: oklch(58% .233 277.117);
  --color-primary-content: oklch(96% .018 272.314);
  --color-secondary: oklch(65% .241 354.308);
  --color-secondary-content: oklch(94% .028 342.258);
  --color-accent: oklch(77% .152 181.912);
  --color-accent-content: oklch(38% .063 188.416);
  --color-neutral: oklch(14% .005 285.823);
  --color-neutral-content: oklch(92% .004 286.32);
  --color-info: oklch(74% .16 232.661);
  --color-info-content: oklch(29% .066 243.157);
  --color-success: oklch(76% .177 163.223);
  --color-success-content: oklch(37% .077 168.94);
  --color-warning: oklch(82% .189 84.429);
  --color-warning-content: oklch(41% .112 45.904);
  --color-error: oklch(71% .194 13.428);
  --color-error-content: oklch(27% .105 12.094);
  --radius-selector: .5rem;
  --radius-field: .25rem;
  --radius-box: .5rem;
  --size-selector: .25rem;
  --size-field: .25rem;
  --border: 1px;
  --depth: 1;
  --noise: 0;
}

:root, [data-theme] {
  background-color: var(--root-bg, var(--color-base-100));
  color: var(--color-base-content);
}

:root {
  scrollbar-color: color-mix(in oklch, currentColor 35%, #0000) #0000;
}

@property --radialprogress {
  syntax: "<percentage>";
  inherits: true;
  initial-value: 0%;
}

:root {
  --fx-noise: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.34' numOctaves='4' stitchTiles='stitch'%3E%3C/feTurbulence%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23a)' opacity='0.2'%3E%3C/rect%3E%3C/svg%3E");
}

.container {
  width: 100%;
}

@media (width >= 640px) {
  .container {
    max-width: 640px;
  }
}

@media (width >= 768px) {
  .container {
    max-width: 768px;
  }
}

@media (width >= 1024px) {
  .container {
    max-width: 1024px;
  }
}

@media (width >= 1280px) {
  .container {
    max-width: 1280px;
  }
}

@media (width >= 1536px) {
  .container {
    max-width: 1536px;
  }
}

.link {
  cursor: pointer;
  text-decoration-line: underline;
}

.link:focus {
  --tw-outline-style: none;
  outline-style: none;
}

@media (forced-colors: active) {
  .link:focus {
    outline-offset: 2px;
    outline: 2px solid #0000;
  }
}

.link:focus-visible {
  outline-offset: 2px;
  outline: 2px solid;
}

.carousel {
  scroll-snap-type: x mandatory;
  scroll-behavior: smooth;
  scrollbar-width: none;
  display: inline-flex;
  overflow-x: scroll;
}

.carousel::-webkit-scrollbar {
  display: none;
}

.carousel-item {
  box-sizing: content-box;
  scroll-snap-align: start;
  flex: none;
  display: flex;
}

.carousel-start .carousel-item {
  scroll-snap-align: start;
}

.carousel-center .carousel-item {
  scroll-snap-align: center;
}

.carousel-end .carousel-item {
  scroll-snap-align: end;
}

.dropdown {
  position-area: var(--anchor-v, bottom) var(--anchor-h, span-right);
  display: inline-block;
  position: relative;
}

.dropdown > :not(summary):focus {
  --tw-outline-style: none;
  outline-style: none;
}

@media (forced-colors: active) {
  .dropdown > :not(summary):focus {
    outline-offset: 2px;
    outline: 2px solid #0000;
  }
}

.dropdown .dropdown-content {
  position: absolute;
}

.dropdown:not(details, .dropdown-open, .dropdown-hover:hover, :focus-within) .dropdown-content {
  transform-origin: top;
  opacity: 0;
  display: none;
  scale: 95%;
}

.dropdown[popover], .dropdown .dropdown-content {
  z-index: 999;
  transition-behavior: allow-discrete;
  transition-property: opacity, scale, display;
  transition-duration: .2s;
  transition-timing-function: cubic-bezier(.4, 0, .2, 1);
  animation: .2s dropdown;
}

@starting-style {
  .dropdown[popover], .dropdown .dropdown-content {
    opacity: 0;
    scale: 95%;
  }
}

.dropdown.dropdown-open > [tabindex]:first-child, .dropdown:not(.dropdown-hover):focus > [tabindex]:first-child, .dropdown:focus-within > [tabindex]:first-child {
  pointer-events: none;
}

.dropdown.dropdown-open .dropdown-content, .dropdown:not(.dropdown-hover):focus .dropdown-content, .dropdown:focus-within .dropdown-content {
  opacity: 1;
}

.dropdown.dropdown-hover:hover .dropdown-content {
  opacity: 1;
  scale: 100%;
}

.dropdown:is(details) summary::-webkit-details-marker {
  display: none;
}

.dropdown.dropdown-open .dropdown-content, .dropdown:focus .dropdown-content, .dropdown:focus-within .dropdown-content {
  scale: 100%;
}

.dropdown:where([popover]) {
  background: none;
}

.dropdown[popover] {
  color: inherit;
  position: fixed;
}

@supports not (position-area: bottom) {
  .dropdown[popover] {
    margin: auto;
  }

  .dropdown[popover].dropdown-open:not(:popover-open) {
    transform-origin: top;
    opacity: 0;
    display: none;
    scale: 95%;
  }

  .dropdown[popover]::backdrop {
    background-color: oklab(0% none none / .3);
  }
}

.dropdown[popover]:not(.dropdown-open, :popover-open) {
  transform-origin: top;
  opacity: 0;
  display: none;
  scale: 95%;
}

@keyframes dropdown {
  0% {
    opacity: 0;
  }
}

.card {
  border-radius: var(--radius-box);
  outline-offset: 2px;
  outline: 0 solid #0000;
  flex-direction: column;
  transition: outline .2s ease-in-out;
  display: flex;
  position: relative;
}

.card:focus {
  --tw-outline-style: none;
  outline-style: none;
}

@media (forced-colors: active) {
  .card:focus {
    outline-offset: 2px;
    outline: 2px solid #0000;
  }
}

.card:focus-visible {
  outline-color: currentColor;
}

.card :where(figure:first-child) {
  border-start-start-radius: inherit;
  border-start-end-radius: inherit;
  border-end-end-radius: unset;
  border-end-start-radius: unset;
  overflow: hidden;
}

.card :where(figure:last-child) {
  border-start-start-radius: unset;
  border-start-end-radius: unset;
  border-end-end-radius: inherit;
  border-end-start-radius: inherit;
  overflow: hidden;
}

.card:where(.card-border) {
  border: var(--border) solid var(--color-base-200);
}

.card:where(.card-dash) {
  border: var(--border) dashed var(--color-base-200);
}

.card.image-full {
  display: grid;
}

.card.image-full > * {
  grid-row-start: 1;
  grid-column-start: 1;
}

.card.image-full > .card-body {
  color: var(--color-neutral-content);
  position: relative;
}

.card.image-full :where(figure) {
  border-radius: inherit;
  overflow: hidden;
}

.card.image-full > figure img {
  -o-object-fit: cover;
  object-fit: cover;
  filter: brightness(28%);
  height: 100%;
}

.card figure {
  justify-content: center;
  align-items: center;
  display: flex;
}

.card:has( > input:is(input[type="checkbox"], input[type="radio"])) {
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
}

.card:has( > :checked) {
  outline: 2px solid;
}

.card-title {
  font-size: var(--cardtitle-fs, 1.125rem);
  align-items: center;
  gap: .5rem;
  font-weight: 600;
  display: flex;
}

.card-xs .card-title {
  --cardtitle-fs: .875rem;
}

.card-sm .card-title {
  --cardtitle-fs: 1rem;
}

.card-md .card-title {
  --cardtitle-fs: 1.125rem;
}

.card-lg .card-title {
  --cardtitle-fs: 1.25rem;
}

.card-xl .card-title {
  --cardtitle-fs: 1.375rem;
}

.select {
  border: var(--border) solid #0000;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-color: var(--color-base-100);
  vertical-align: middle;
  width: clamp(3rem, 20rem, 100%);
  height: var(--size);
  text-overflow: ellipsis;
  box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * .1)) inset;
  border-color: var(--input-color);
  --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);
  --size: calc(var(--size-field, .25rem) * 10);
  background-image: linear-gradient(45deg, #0000 50%, currentColor 50%), linear-gradient(135deg, currentColor 50%, #0000 50%);
  background-position: calc(100% - 20px) calc(1px + 50%), calc(100% - 16.1px) calc(1px + 50%);
  background-repeat: no-repeat;
  background-size: 4px 4px, 4px 4px;
  border-start-start-radius: var(--join-ss, var(--radius-field));
  border-start-end-radius: var(--join-se, var(--radius-field));
  border-end-end-radius: var(--join-ee, var(--radius-field));
  border-end-start-radius: var(--join-es, var(--radius-field));
  flex-shrink: 1;
  align-items: center;
  gap: .375rem;
  padding-inline: 1rem 1.75rem;
  font-size: .875rem;
  display: inline-flex;
  position: relative;
}

[dir="rtl"] .select {
  background-position: 12px calc(1px + 50%), 16px calc(1px + 50%);
}

.select select {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: inherit;
  border-radius: inherit;
  border-style: none;
  width: calc(100% + 2.75rem);
  height: calc(100% - 2px);
  margin-inline: -1rem -1.75rem;
  padding-inline: 1rem 1.75rem;
}

.select select:focus, .select select:focus-within {
  --tw-outline-style: none;
  outline-style: none;
}

@media (forced-colors: active) {
  .select select:focus, .select select:focus-within {
    outline-offset: 2px;
    outline: 2px solid #0000;
  }
}

.select select:not(:last-child) {
  background-image: none;
  margin-inline-end: -1.375rem;
}

.select:focus, .select:focus-within {
  --input-color: var(--color-base-content);
  box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000);
  outline: 2px solid var(--input-color);
  outline-offset: 2px;
  isolation: isolate;
  z-index: 1;
}

.select:has( > select[disabled]), .select:is(:disabled, [disabled]) {
  cursor: not-allowed;
  border-color: var(--color-base-200);
  background-color: var(--color-base-200);
  color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
}

.select:has( > select[disabled])::-moz-placeholder, .select:is(:disabled, [disabled])::-moz-placeholder {
  color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
}

.select:has( > select[disabled])::placeholder, .select:is(:disabled, [disabled])::placeholder {
  color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
}

.select:has( > select[disabled]) > select[disabled] {
  cursor: not-allowed;
}

@keyframes progress {
  50% {
    background-position-x: -115%;
  }
}

.avatar-group :where(.avatar) {
  border: 4px solid var(--color-base-100);
  border-radius: 3.40282e38px;
  overflow: hidden;
}

.avatar {
  vertical-align: middle;
  display: inline-flex;
  position: relative;
}

.avatar > div {
  aspect-ratio: 1;
  display: block;
  overflow: hidden;
}

.avatar img {
  -o-object-fit: cover;
  object-fit: cover;
  width: 100%;
  height: 100%;
}

.input {
  cursor: text;
  border: var(--border) solid #0000;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-color: var(--color-base-100);
  vertical-align: middle;
  white-space: nowrap;
  width: clamp(3rem, 20rem, 100%);
  height: var(--size);
  border-color: var(--input-color);
  box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * .1)) inset;
  --size: calc(var(--size-field, .25rem) * 10);
  --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);
  border-start-start-radius: var(--join-ss, var(--radius-field));
  border-start-end-radius: var(--join-se, var(--radius-field));
  border-end-end-radius: var(--join-ee, var(--radius-field));
  border-end-start-radius: var(--join-es, var(--radius-field));
  flex-shrink: 1;
  align-items: center;
  gap: .5rem;
  padding-inline: .75rem;
  font-size: .875rem;
  display: inline-flex;
  position: relative;
}

.input:where(input) {
  display: inline-flex;
}

.input :where(input) {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-color: #0000;
  border: none;
  width: 100%;
  height: 100%;
  display: inline-flex;
}

.input :where(input):focus, .input :where(input):focus-within {
  --tw-outline-style: none;
  outline-style: none;
}

@media (forced-colors: active) {
  .input :where(input):focus, .input :where(input):focus-within {
    outline-offset: 2px;
    outline: 2px solid #0000;
  }
}

.input :where(input[type="date"]) {
  display: inline-block;
}

.input:focus, .input:focus-within {
  --input-color: var(--color-base-content);
  box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000);
  outline: 2px solid var(--input-color);
  outline-offset: 2px;
  isolation: isolate;
  z-index: 1;
}

.input:has( > input[disabled]), .input:is(:disabled, [disabled]) {
  cursor: not-allowed;
  border-color: var(--color-base-200);
  background-color: var(--color-base-200);
  color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
}

.input:has( > input[disabled])::-moz-placeholder, .input:is(:disabled, [disabled])::-moz-placeholder {
  color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
}

.input:has( > input[disabled])::placeholder, .input:is(:disabled, [disabled])::placeholder {
  color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
}

.input:has( > input[disabled]), .input:is(:disabled, [disabled]) {
  box-shadow: none;
}

.input:has( > input[disabled]) > input[disabled] {
  cursor: not-allowed;
}

.input::-webkit-date-and-time-value {
  text-align: inherit;
}

.input[type="number"]::-webkit-inner-spin-button {
  margin-block: -.75rem;
  margin-inline-end: -.75rem;
}

.input::-webkit-calendar-picker-indicator {
  position: absolute;
  inset-inline-end: .75em;
}

.status {
  aspect-ratio: 1;
  border-radius: var(--radius-selector);
  background-color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
  vertical-align: middle;
  color: #0000004d;
  background-position: center;
  background-repeat: no-repeat;
  width: .5rem;
  height: .5rem;
  display: inline-block;
}

@supports (color: color-mix(in lab, red, red)) {
  .status {
    color: color-mix(in oklab, var(--color-black) 30%, transparent);
  }
}

.status {
  background-image: radial-gradient(circle at 35% 30%, oklch(1 0 0 / calc(var(--depth) * .5)), #0000);
  box-shadow: 0 2px 3px -1px color-mix(in oklab, currentColor calc(var(--depth) * 100%), #0000);
}

.label {
  white-space: nowrap;
  color: color-mix(in oklab, currentColor 60%, transparent);
  align-items: center;
  gap: .375rem;
  display: inline-flex;
}

.label:has(input) {
  cursor: pointer;
}

.label:is(.input > *, .select > *) {
  white-space: nowrap;
  height: calc(100% - .5rem);
  font-size: inherit;
  align-items: center;
  padding-inline: .75rem;
  display: flex;
}

.label:is(.input > *, .select > *):first-child {
  border-inline-end: var(--border) solid color-mix(in oklab, currentColor 10%, #0000);
  margin-inline: -.75rem .75rem;
}

.label:is(.input > *, .select > *):last-child {
  border-inline-start: var(--border) solid color-mix(in oklab, currentColor 10%, #0000);
  margin-inline: .75rem -.75rem;
}

.menu {
  --menu-active-fg: var(--color-neutral-content);
  --menu-active-bg: var(--color-neutral);
  flex-flow: column wrap;
  width: fit-content;
  padding: .5rem;
  font-size: .875rem;
  display: flex;
}

.menu :where(li ul) {
  white-space: nowrap;
  margin-inline-start: 1rem;
  padding-inline-start: .5rem;
  position: relative;
}

.menu :where(li ul):before {
  inset-inline-start: 0;
  background-color: var(--color-base-content);
  opacity: .1;
  width: var(--border);
  content: "";
  position: absolute;
  top: .75rem;
  bottom: .75rem;
}

.menu :where(li > .menu-dropdown:not(.menu-dropdown-show)) {
  display: none;
}

.menu :where(li:not(.menu-title) > :not(ul, details, .menu-title, .btn)), .menu :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
  border-radius: var(--radius-field);
  text-align: start;
  text-wrap: balance;
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
  grid-auto-columns: minmax(auto, max-content) auto max-content;
  grid-auto-flow: column;
  align-content: flex-start;
  align-items: center;
  gap: .5rem;
  padding-block: .375rem;
  padding-inline: .75rem;
  transition-property: color, background-color, box-shadow;
  transition-duration: .2s;
  transition-timing-function: cubic-bezier(0, 0, .2, 1);
  display: grid;
}

.menu :where(li > details > summary) {
  --tw-outline-style: none;
  outline-style: none;
}

@media (forced-colors: active) {
  .menu :where(li > details > summary) {
    outline-offset: 2px;
    outline: 2px solid #0000;
  }
}

.menu :where(li > details > summary)::-webkit-details-marker {
  display: none;
}

.menu :where(li > details > summary):after, .menu :where(li > .menu-dropdown-toggle):after {
  content: "";
  transform-origin: 50%;
  pointer-events: none;
  justify-self: flex-end;
  width: .375rem;
  height: .375rem;
  transition-property: rotate, translate;
  transition-duration: .2s;
  display: block;
  translate: 0 -1px;
  rotate: -135deg;
  box-shadow: inset 2px 2px;
}

.menu :where(li > details[open] > summary):after, .menu :where(li > .menu-dropdown-toggle.menu-dropdown-show):after {
  translate: 0 1px;
  rotate: 45deg;
}

.menu :where(li:not(.menu-title, .disabled) > :not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title)):not(.menu-active, :active, .btn).menu-focus, .menu :where(li:not(.menu-title, .disabled) > :not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title)):not(.menu-active, :active, .btn):focus-visible {
  cursor: pointer;
  background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
  color: var(--color-base-content);
  --tw-outline-style: none;
  outline-style: none;
}

@media (forced-colors: active) {
  .menu :where(li:not(.menu-title, .disabled) > :not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title)):not(.menu-active, :active, .btn).menu-focus, .menu :where(li:not(.menu-title, .disabled) > :not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title)):not(.menu-active, :active, .btn):focus-visible {
    outline-offset: 2px;
    outline: 2px solid #0000;
  }
}

.menu :where(li:not(.menu-title, .disabled) > :not(ul, details, .menu-title):not(.menu-active, :active, .btn):hover, li:not(.menu-title, .disabled) > details > summary:not(.menu-title):not(.menu-active, :active, .btn):hover) {
  cursor: pointer;
  background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
  --tw-outline-style: none;
  outline-style: none;
}

@media (forced-colors: active) {
  .menu :where(li:not(.menu-title, .disabled) > :not(ul, details, .menu-title):not(.menu-active, :active, .btn):hover, li:not(.menu-title, .disabled) > details > summary:not(.menu-title):not(.menu-active, :active, .btn):hover) {
    outline-offset: 2px;
    outline: 2px solid #0000;
  }
}

.menu :where(li:not(.menu-title, .disabled) > :not(ul, details, .menu-title):not(.menu-active, :active, .btn):hover, li:not(.menu-title, .disabled) > details > summary:not(.menu-title):not(.menu-active, :active, .btn):hover) {
  box-shadow: inset 0 1px oklch(0% 0 0 / .01), inset 0 -1px oklch(100% 0 0 / .01);
}

.menu :where(li:empty) {
  background-color: var(--color-base-content);
  opacity: .1;
  height: 1px;
  margin: .5rem 1rem;
}

.menu :where(li) {
  flex-flow: column wrap;
  flex-shrink: 0;
  align-items: stretch;
  display: flex;
  position: relative;
}

.menu :where(li) .badge {
  justify-self: flex-end;
}

.menu :where(li) > :not(ul, .menu-title, details, .btn):active, .menu :where(li) > :not(ul, .menu-title, details, .btn).menu-active, .menu :where(li) > details > summary:active {
  --tw-outline-style: none;
  outline-style: none;
}

@media (forced-colors: active) {
  .menu :where(li) > :not(ul, .menu-title, details, .btn):active, .menu :where(li) > :not(ul, .menu-title, details, .btn).menu-active, .menu :where(li) > details > summary:active {
    outline-offset: 2px;
    outline: 2px solid #0000;
  }
}

.menu :where(li) > :not(ul, .menu-title, details, .btn):active, .menu :where(li) > :not(ul, .menu-title, details, .btn).menu-active, .menu :where(li) > details > summary:active {
  color: var(--menu-active-fg);
  background-color: var(--menu-active-bg);
  background-size: auto, calc(var(--noise) * 100%);
  background-image: none, var(--fx-noise);
}

.menu :where(li) > :not(ul, .menu-title, details, .btn):active:not(.menu :where(li) > :not(ul, .menu-title, details, .btn):active:active), .menu :where(li) > :not(ul, .menu-title, details, .btn).menu-active:not(.menu :where(li) > :not(ul, .menu-title, details, .btn).menu-active:active), .menu :where(li) > details > summary:active:not(.menu :where(li) > details > summary:active:active) {
  box-shadow: 0 2px calc(var(--depth) * 3px) -2px var(--menu-active-bg);
}

.menu :where(li).menu-disabled {
  pointer-events: none;
  color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
}

.menu .dropdown:focus-within .menu-dropdown-toggle:after {
  translate: 0 1px;
  rotate: 45deg;
}

.menu .dropdown-content {
  margin-top: .5rem;
  padding: .5rem;
}

.menu .dropdown-content:before {
  display: none;
}

@keyframes toast {
  0% {
    opacity: 0;
    scale: .9;
  }

  100% {
    opacity: 1;
    scale: 1;
  }
}

:where(.btn) {
  width: unset;
}

.btn {
  cursor: pointer;
  text-align: center;
  vertical-align: middle;
  outline-offset: 2px;
  webkit-user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
  padding-inline: var(--btn-p);
  color: var(--btn-fg);
  --tw-prose-links: var(--btn-fg);
  height: var(--size);
  font-size: var(--fontsize, .875rem);
  outline-color: var(--btn-color, var(--color-base-content));
  background-color: var(--btn-bg);
  background-size: auto, calc(var(--noise) * 100%);
  background-image: none, var(--btn-noise);
  border-width: var(--border);
  border-style: solid;
  border-color: var(--btn-border);
  text-shadow: 0 .5px oklch(100% 0 0 / calc(var(--depth) * .15));
  touch-action: manipulation;
  box-shadow: 0 .5px 0 .5px oklch(100% 0 0 / calc(var(--depth) * 6%)) inset, var(--btn-shadow);
  --size: calc(var(--size-field, .25rem) * 10);
  --btn-bg: var(--btn-color, var(--color-base-200));
  --btn-fg: var(--color-base-content);
  --btn-p: 1rem;
  --btn-border: color-mix(in oklab, var(--btn-bg), #000 calc(var(--depth) * 5%));
  --btn-shadow: 0 3px 2px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000), 0 4px 3px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000);
  --btn-noise: var(--fx-noise);
  border-start-start-radius: var(--join-ss, var(--radius-field));
  border-start-end-radius: var(--join-se, var(--radius-field));
  border-end-end-radius: var(--join-ee, var(--radius-field));
  border-end-start-radius: var(--join-es, var(--radius-field));
  flex-wrap: nowrap;
  flex-shrink: 0;
  justify-content: center;
  align-items: center;
  gap: .375rem;
  font-weight: 600;
  transition-property: color, background-color, border-color, box-shadow;
  transition-duration: .2s;
  transition-timing-function: cubic-bezier(0, 0, .2, 1);
  display: inline-flex;
}

.prose .btn {
  text-decoration-line: none;
}

@media (hover: hover) {
  .btn:hover {
    --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);
  }
}

.btn:focus-visible {
  isolation: isolate;
  outline-width: 2px;
  outline-style: solid;
}

.btn:active:not(.btn-active) {
  --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 5%);
  --btn-border: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);
  --btn-shadow: 0 0 0 0 oklch(0% 0 0 / 0), 0 0 0 0 oklch(0% 0 0 / 0);
  translate: 0 .5px;
}

.btn:is(:disabled, [disabled], .btn-disabled):not(.btn-link, .btn-ghost) {
  background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
  box-shadow: none;
}

.btn:is(:disabled, [disabled], .btn-disabled) {
  pointer-events: none;
  --btn-border: #0000;
  --btn-noise: none;
  --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
}

@media (hover: hover) {
  .btn:is(:disabled, [disabled], .btn-disabled):hover {
    pointer-events: none;
    background-color: color-mix(in oklab, var(--color-neutral) 20%, transparent);
    --btn-border: #0000;
    --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
  }
}

.btn:is(input[type="checkbox"], input[type="radio"]) {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.btn:is(input[type="checkbox"], input[type="radio"]):after {
  content: attr(aria-label);
}

.btn:where(input:checked:not(.filter .btn)) {
  --btn-color: var(--color-primary);
  --btn-fg: var(--color-primary-content);
  isolation: isolate;
}

.btn-primary {
  --btn-color: var(--color-primary);
  --btn-fg: var(--color-primary-content);
}

.mockup-browser .mockup-browser-toolbar .input {
  background-color: var(--color-base-200);
  text-overflow: ellipsis;
  white-space: nowrap;
  direction: ltr;
  align-items: center;
  gap: .5rem;
  height: 100%;
  margin-inline: auto;
  font-size: .75rem;
  display: flex;
  overflow: hidden;
}

.mockup-browser .mockup-browser-toolbar .input:before {
  content: "";
  opacity: .3;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='currentColor' class='size-4'%3E%3Cpath fill-rule='evenodd' d='M9.965 11.026a5 5 0 1 1 1.06-1.06l2.755 2.754a.75.75 0 1 1-1.06 1.06l-2.755-2.754ZM10.5 7a3.5 3.5 0 1 1-7 0 3.5 3.5 0 0 1 7 0Z' clip-rule='evenodd' /%3E%3C/svg%3E%0A");
  width: 1rem;
  height: 1rem;
}

@keyframes rating {
  0%, 40% {
    filter: brightness(1.05) contrast(1.05);
    scale: 1.1;
  }
}

.tabs {
  --tabs-height: auto;
  --tabs-direction: row;
  height: var(--tabs-height);
  flex-wrap: wrap;
  flex-direction: var(--tabs-direction);
  display: flex;
}

.tab {
  cursor: pointer;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  text-align: center;
  webkit-user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
  flex-wrap: wrap;
  justify-content: center;
  align-items: center;
  display: inline-flex;
  position: relative;
}

@media (hover: hover) {
  .tab:hover {
    color: var(--color-base-content);
  }
}

.tab {
  --tab-p: 1rem;
  --tab-bg: var(--color-base-100);
  --tab-border-color: var(--color-base-300);
  --tab-radius-ss: 0;
  --tab-radius-se: 0;
  --tab-radius-es: 0;
  --tab-radius-ee: 0;
  --tab-order: 0;
  --tab-radius-min: calc(.75rem - var(--border));
  order: var(--tab-order);
  height: calc(var(--size-field, .25rem) * 10);
  border-color: #0000;
  padding-inline-start: var(--tab-p);
  padding-inline-end: var(--tab-p);
  font-size: .875rem;
}

.tab:is(input[type="radio"]) {
  min-width: fit-content;
}

.tab:is(input[type="radio"]):after {
  content: attr(aria-label);
}

.tab:is(label) {
  position: relative;
}

.tab:is(label) input {
  cursor: pointer;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  opacity: 0;
  position: absolute;
  inset: 0;
}

.tab:checked + .tab-content, .tab:is(label:has(:checked)) + .tab-content, .tab:is(.tab-active, [aria-selected="true"]) + .tab-content {
  height: 100%;
  display: block;
}

.tab:not(:checked, label:has(:checked), :hover, .tab-active, [aria-selected="true"]) {
  color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
}

.tab:not(input):empty {
  cursor: default;
  flex-grow: 1;
}

.tab:focus {
  --tw-outline-style: none;
  outline-style: none;
}

@media (forced-colors: active) {
  .tab:focus {
    outline-offset: 2px;
    outline: 2px solid #0000;
  }
}

.tab:focus-visible, .tab:is(label:has(:checked:focus-visible)) {
  outline-offset: -5px;
  outline: 2px solid;
}

.tab[disabled] {
  pointer-events: none;
  opacity: .4;
}

.tabs-border .tab {
  --tab-border-color: #0000 #0000 var(--tab-border-color) #0000;
  border-radius: var(--radius-field);
  position: relative;
}

.tabs-border .tab:before {
  --tw-content: "";
  content: var(--tw-content);
  background-color: var(--tab-border-color);
  border-radius: var(--radius-field);
  width: 80%;
  height: 3px;
  transition: background-color .2s;
  position: absolute;
  bottom: 0;
  left: 10%;
}

.tabs-border .tab:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]):before, .tabs-border .tab:is(input:checked):before, .tabs-border .tab:is(label:has(:checked)):before {
  --tab-border-color: currentColor;
  border-top: 3px solid;
}

.tabs-lift > .tab {
  --tab-border: 0 0 var(--border) 0;
  --tab-radius-ss: min(var(--radius-field), var(--tab-radius-min));
  --tab-radius-se: min(var(--radius-field), var(--tab-radius-min));
  --tab-radius-es: 0;
  --tab-radius-ee: 0;
  --tab-paddings: var(--border) var(--tab-p) 0 var(--tab-p);
  --tab-border-colors: #0000 #0000 var(--tab-border-color) #0000;
  --tab-corner-width: calc(100% + min(var(--radius-field), var(--tab-radius-min)) * 2);
  --tab-corner-height: min(var(--radius-field), var(--tab-radius-min));
  --tab-corner-position: top left, top right;
  border-width: var(--tab-border);
  padding: var(--tab-paddings);
  border-color: var(--tab-border-colors);
  border-start-start-radius: var(--tab-radius-ss);
  border-start-end-radius: var(--tab-radius-se);
  border-end-end-radius: var(--tab-radius-ee);
  border-end-start-radius: var(--tab-radius-es);
}

.tabs-lift > .tab:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]), .tabs-lift > .tab:is(input:checked, label:has(:checked)) {
  --tab-border: var(--border) var(--border) 0 var(--border);
  --tab-border-colors: var(--tab-border-color) var(--tab-border-color) #0000 var(--tab-border-color);
  --tab-paddings: 0 calc(var(--tab-p)  - var(--border)) var(--border) calc(var(--tab-p)  - var(--border));
  --tab-inset: auto auto 0 auto;
  --tab-grad: calc(69% - var(--border));
  --radius-start: radial-gradient(circle at top left, #0000 var(--tab-grad), var(--tab-border-color) calc(var(--tab-grad)  + .25px), var(--tab-border-color) calc(var(--tab-grad)  + var(--border)), var(--tab-bg) calc(var(--tab-grad)  + var(--border)  + .25px));
  --radius-end: radial-gradient(circle at top right, #0000 var(--tab-grad), var(--tab-border-color) calc(var(--tab-grad)  + .25px), var(--tab-border-color) calc(var(--tab-grad)  + var(--border)), var(--tab-bg) calc(var(--tab-grad)  + var(--border)  + .25px));
  background-color: var(--tab-bg);
}

.tabs-lift > .tab:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]):before, .tabs-lift > .tab:is(input:checked, label:has(:checked)):before {
  z-index: 1;
  content: "";
  width: var(--tab-corner-width);
  height: var(--tab-corner-height);
  background-position: var(--tab-corner-position);
  background-image: var(--radius-start), var(--radius-end);
  background-size: min(var(--radius-field), var(--tab-radius-min)) min(var(--radius-field), var(--tab-radius-min));
  inset: var(--tab-inset);
  background-repeat: no-repeat;
  display: block;
  position: absolute;
}

.tabs-lift > .tab:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]):first-child:before, .tabs-lift > .tab:is(input:checked, label:has(:checked)):first-child:before {
  --radius-start: none;
}

[dir="rtl"] .tabs-lift > .tab:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]):first-child:before, [dir="rtl"] .tabs-lift > .tab:is(input:checked, label:has(:checked)):first-child:before {
  transform: rotateY(180deg);
}

.tabs-lift > .tab:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]):last-child:before, .tabs-lift > .tab:is(input:checked, label:has(:checked)):last-child:before {
  --radius-end: none;
}

[dir="rtl"] .tabs-lift > .tab:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]):last-child:before, [dir="rtl"] .tabs-lift > .tab:is(input:checked, label:has(:checked)):last-child:before {
  transform: rotateY(180deg);
}

.tabs-lift:has(.tab-content) > .tab:first-child:not(.tab-active, [aria-selected="true"]) {
  --tab-border-colors: var(--tab-border-color) var(--tab-border-color) #0000 var(--tab-border-color);
}

.tabs-top .tab {
  --tab-order: 0;
  --tab-border: 0 0 var(--border) 0;
  --tab-radius-ss: min(var(--radius-field), var(--tab-radius-min));
  --tab-radius-se: min(var(--radius-field), var(--tab-radius-min));
  --tab-radius-es: 0;
  --tab-radius-ee: 0;
  --tab-paddings: var(--border) var(--tab-p) 0 var(--tab-p);
  --tab-border-colors: #0000 #0000 var(--tab-border-color) #0000;
  --tab-corner-width: calc(100% + min(var(--radius-field), var(--tab-radius-min)) * 2);
  --tab-corner-height: min(var(--radius-field), var(--tab-radius-min));
  --tab-corner-position: top left, top right;
}

.tabs-top .tab:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]), .tabs-top .tab:is(input:checked), .tabs-top .tab:is(label:has(:checked)) {
  --tab-border: var(--border) var(--border) 0 var(--border);
  --tab-border-colors: var(--tab-border-color) var(--tab-border-color) #0000 var(--tab-border-color);
  --tab-paddings: 0 calc(var(--tab-p)  - var(--border)) var(--border) calc(var(--tab-p)  - var(--border));
  --tab-inset: auto auto 0 auto;
  --radius-start: radial-gradient(circle at top left, #0000 var(--tab-grad), var(--tab-border-color) calc(var(--tab-grad)  + .25px), var(--tab-border-color) calc(var(--tab-grad)  + var(--border)), var(--tab-bg) calc(var(--tab-grad)  + var(--border)  + .25px));
  --radius-end: radial-gradient(circle at top right, #0000 var(--tab-grad), var(--tab-border-color) calc(var(--tab-grad)  + .25px), var(--tab-border-color) calc(var(--tab-grad)  + var(--border)), var(--tab-bg) calc(var(--tab-grad)  + var(--border)  + .25px));
}

.tabs-top:has(.tab-content) > .tab:first-child:not(.tab-active, [aria-selected="true"]) {
  --tab-border-colors: var(--tab-border-color) var(--tab-border-color) #0000 var(--tab-border-color);
}

.tabs-bottom .tab {
  --tab-order: 1;
  --tab-border: var(--border) 0 0 0;
  --tab-radius-ss: 0;
  --tab-radius-se: 0;
  --tab-radius-es: min(var(--radius-field), var(--tab-radius-min));
  --tab-radius-ee: min(var(--radius-field), var(--tab-radius-min));
  --tab-border-colors: var(--tab-border-color) #0000 #0000 #0000;
  --tab-paddings: 0 var(--tab-p) var(--border) var(--tab-p);
  --tab-corner-width: calc(100% + min(var(--radius-field), var(--tab-radius-min)) * 2);
  --tab-corner-height: min(var(--radius-field), var(--tab-radius-min));
  --tab-corner-position: top left, top right;
}

.tabs-bottom .tab:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]), .tabs-bottom .tab:is(input:checked), .tabs-bottom .tab:is(label:has(:checked)) {
  --tab-border: 0 var(--border) var(--border) var(--border);
  --tab-border-colors: #0000 var(--tab-border-color) var(--tab-border-color) var(--tab-border-color);
  --tab-paddings: var(--border) calc(var(--tab-p)  - var(--border)) 0 calc(var(--tab-p)  - var(--border));
  --tab-inset: 0 auto auto auto;
  --radius-start: radial-gradient(circle at bottom left, #0000 var(--tab-grad), var(--tab-border-color) calc(var(--tab-grad)  + .25px), var(--tab-border-color) calc(var(--tab-grad)  + var(--border)), var(--tab-bg) calc(var(--tab-grad)  + var(--border)  + .25px));
  --radius-end: radial-gradient(circle at bottom right, #0000 var(--tab-grad), var(--tab-border-color) calc(var(--tab-grad)  + .25px), var(--tab-border-color) calc(var(--tab-grad)  + var(--border)), var(--tab-bg) calc(var(--tab-grad)  + var(--border)  + .25px));
}

.tabs-bottom:has(.tab-content) > .tab:first-child:not(.tab-active, [aria-selected="true"]) {
  --tab-border-colors: #0000 var(--tab-border-color) var(--tab-border-color) var(--tab-border-color);
}

.tabs-box .tab {
  border-radius: var(--radius-field);
  border-style: none;
}

.tabs-box .tab:focus-visible, .tabs-box .tab:is(label:has(:checked:focus-visible)) {
  outline-offset: 2px;
}

.tabs-xs :where(.tab) {
  height: calc(var(--size-field, .25rem) * 6);
  --tab-p: .375rem;
  --tab-radius-min: calc(.5rem - var(--border));
  font-size: .75rem;
}

.tabs-sm :where(.tab) {
  height: calc(var(--size-field, .25rem) * 8);
  --tab-p: .5rem;
  --tab-radius-min: calc(.5rem - var(--border));
  font-size: .875rem;
}

.tabs-md :where(.tab) {
  height: calc(var(--size-field, .25rem) * 10);
  --tab-p: .75rem;
  --tab-radius-min: calc(.75rem - var(--border));
  font-size: .875rem;
}

.tabs-lg :where(.tab) {
  height: calc(var(--size-field, .25rem) * 12);
  --tab-p: 1rem;
  --tab-radius-min: calc(1.5rem - var(--border));
  font-size: 1.125rem;
}

.tabs-xl :where(.tab) {
  height: calc(var(--size-field, .25rem) * 14);
  --tab-p: 1.25rem;
  --tab-radius-min: calc(2rem - var(--border));
  font-size: 1.125rem;
}

@keyframes radio {
  0% {
    padding: 5px;
  }

  50% {
    padding: 3px;
  }
}

@keyframes skeleton {
  0% {
    background-position: 150%;
  }

  100% {
    background-position: -50%;
  }
}

.loading {
  pointer-events: none;
  aspect-ratio: 1;
  vertical-align: middle;
  width: calc(var(--size-selector, .25rem) * 6);
  background-color: currentColor;
  display: inline-block;
  -webkit-mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='black' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cg transform-origin='center'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3' stroke-linecap='round'%3E%3CanimateTransform attributeName='transform' type='rotate' from='0 12 12' to='360 12 12' dur='2s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dasharray' values='0,150;42,150;42,150' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dashoffset' values='0;-16;-59' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3C/circle%3E%3C/g%3E%3C/svg%3E");
  mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='black' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cg transform-origin='center'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3' stroke-linecap='round'%3E%3CanimateTransform attributeName='transform' type='rotate' from='0 12 12' to='360 12 12' dur='2s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dasharray' values='0,150;42,150;42,150' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dashoffset' values='0;-16;-59' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3C/circle%3E%3C/g%3E%3C/svg%3E");
  -webkit-mask-position: center;
  mask-position: center;
  -webkit-mask-size: 100%;
  mask-size: 100%;
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
}

.sr-only {
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  position: absolute;
  overflow: hidden;
}

.pointer-events-none {
  pointer-events: none;
}

.visible {
  visibility: visible;
}

.fixed {
  position: fixed;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.sticky {
  position: sticky;
}

.inset-0 {
  inset: 0;
}

.-bottom-12 {
  bottom: -3rem;
}

.-left-12 {
  left: -3rem;
}

.-right-12 {
  right: -3rem;
}

.-top-12 {
  top: -3rem;
}

.left-0 {
  left: 0;
}

.left-1\/2 {
  left: 50%;
}

.left-2 {
  left: .5rem;
}

.right-10 {
  right: 2.5rem;
}

.right-2 {
  right: .5rem;
}

.top-0 {
  top: 0;
}

.top-1\/2 {
  top: 50%;
}

.top-10 {
  top: 2.5rem;
}

.top-\[1px\] {
  top: 1px;
}

.top-\[60\%\] {
  top: 60%;
}

.top-full {
  top: 100%;
}

.isolate {
  isolation: isolate;
}

.z-20 {
  z-index: 20;
}

.z-50 {
  z-index: 50;
}

.z-\[100\] {
  z-index: 100;
}

.z-\[1\] {
  z-index: 1;
}

.col-start-2 {
  grid-column-start: 2;
}

.row-span-2 {
  grid-row: span 2 / span 2;
}

.row-start-1 {
  grid-row-start: 1;
}

.-mx-1 {
  margin-left: -.25rem;
  margin-right: -.25rem;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.my-1 {
  margin-top: .25rem;
  margin-bottom: .25rem;
}

.-ml-4 {
  margin-left: -1rem;
}

.-mt-4 {
  margin-top: -1rem;
}

.mb-4 {
  margin-bottom: 1rem;
}

.mb-8 {
  margin-bottom: 2rem;
}

.ml-1 {
  margin-left: .25rem;
}

.ml-auto {
  margin-left: auto;
}

.mr-2 {
  margin-right: .5rem;
}

.mt-1\.5 {
  margin-top: .375rem;
}

.mt-2 {
  margin-top: .5rem;
}

.mt-32 {
  margin-top: 8rem;
}

.mt-4 {
  margin-top: 1rem;
}

.block {
  display: block;
}

.inline-block {
  display: inline-block;
}

.flex {
  display: flex;
}

.inline-flex {
  display: inline-flex;
}

.grid {
  display: grid;
}

.hidden {
  display: none;
}

.size-2 {
  width: .5rem;
  height: .5rem;
}

.size-3 {
  width: .75rem;
  height: .75rem;
}

.size-3\.5 {
  width: .875rem;
  height: .875rem;
}

.size-4 {
  width: 1rem;
  height: 1rem;
}

.size-8 {
  width: 2rem;
  height: 2rem;
}

.size-9 {
  width: 2.25rem;
  height: 2.25rem;
}

.h-1\.5 {
  height: .375rem;
}

.h-10 {
  height: 2.5rem;
}

.h-16 {
  height: 4rem;
}

.h-2 {
  height: .5rem;
}

.h-4 {
  height: 1rem;
}

.h-5 {
  height: 1.25rem;
}

.h-6 {
  height: 1.5rem;
}

.h-8 {
  height: 2rem;
}

.h-9 {
  height: 2.25rem;
}

.h-\[var\(--radix-navigation-menu-viewport-height\)\] {
  height: var(--radix-navigation-menu-viewport-height);
}

.h-\[var\(--radix-select-trigger-height\)\] {
  height: var(--radix-select-trigger-height);
}

.h-full {
  height: 100%;
}

.h-px {
  height: 1px;
}

.min-h-screen {
  min-height: 100vh;
}

.w-2 {
  width: .5rem;
}

.w-4 {
  width: 1rem;
}

.w-5 {
  width: 1.25rem;
}

.w-6 {
  width: 1.5rem;
}

.w-\[300px\] {
  width: 300px;
}

.w-fit {
  width: fit-content;
}

.w-full {
  width: 100%;
}

.w-max {
  width: max-content;
}

.min-w-0 {
  min-width: 0;
}

.min-w-\[8rem\] {
  min-width: 8rem;
}

.min-w-\[var\(--radix-select-trigger-width\)\] {
  min-width: var(--radix-select-trigger-width);
}

.max-w-full {
  max-width: 100%;
}

.max-w-max {
  max-width: max-content;
}

.max-w-sm {
  max-width: 24rem;
}

.max-w-xl {
  max-width: 36rem;
}

.flex-1 {
  flex: 1;
}

.shrink-0 {
  flex-shrink: 0;
}

.grow-0 {
  flex-grow: 0;
}

.basis-full {
  flex-basis: 100%;
}

.-translate-x-1\/2 {
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.-translate-y-1\/2 {
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.rotate-45 {
  --tw-rotate: 45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.rotate-90 {
  --tw-rotate: 90deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.cursor-default {
  cursor: default;
}

.select-none {
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
}

.scroll-my-1 {
  scroll-margin-top: .25rem;
  scroll-margin-bottom: .25rem;
}

.list-none {
  list-style-type: none;
}

.auto-rows-min {
  grid-auto-rows: min-content;
}

.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}

.grid-rows-\[auto_auto\] {
  grid-template-rows: auto auto;
}

.flex-row {
  flex-direction: row;
}

.flex-col {
  flex-direction: column;
}

.items-start {
  align-items: flex-start;
}

.items-end {
  align-items: flex-end;
}

.items-center {
  align-items: center;
}

.justify-start {
  justify-content: flex-start;
}

.justify-end {
  justify-content: flex-end;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.gap-1 {
  gap: .25rem;
}

.gap-1\.5 {
  gap: .375rem;
}

.gap-2 {
  gap: .5rem;
}

.gap-6 {
  gap: 1.5rem;
}

.space-x-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(.5rem * var(--tw-space-x-reverse));
  margin-left: calc(.5rem * calc(1 - var(--tw-space-x-reverse)));
}

.space-x-6 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(1.5rem * var(--tw-space-x-reverse));
  margin-left: calc(1.5rem * calc(1 - var(--tw-space-x-reverse)));
}

.space-y-4 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1rem * var(--tw-space-y-reverse));
}

.self-start {
  align-self: flex-start;
}

.justify-self-end {
  justify-self: end;
}

.overflow-auto {
  overflow: auto;
}

.overflow-hidden {
  overflow: hidden;
}

.overflow-y-auto {
  overflow-y: auto;
}

.overflow-x-hidden {
  overflow-x: hidden;
}

.whitespace-nowrap {
  white-space: nowrap;
}

.whitespace-pre {
  white-space: pre;
}

.rounded-full {
  border-radius: 9999px;
}

.rounded-lg {
  border-radius: .5rem;
}

.rounded-md {
  border-radius: .375rem;
}

.rounded-sm {
  border-radius: .125rem;
}

.rounded-xl {
  border-radius: .75rem;
}

.rounded-tl-sm {
  border-top-left-radius: .125rem;
}

.border {
  border-width: 1px;
}

.border-b {
  border-bottom-width: 1px;
}

.border-t {
  border-top-width: 1px;
}

.border-base-300 {
  border-color: var(--color-base-300);
}

.bg-base-100 {
  background-color: var(--color-base-100);
}

.bg-base-200 {
  background-color: var(--color-base-200);
}

.bg-primary {
  background-color: var(--color-primary);
}

.bg-secondary {
  background-color: var(--color-secondary);
}

.bg-transparent {
  background-color: #0000;
}

.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity, 1));
}

.fill-current {
  fill: currentColor;
}

.p-1 {
  padding: .25rem;
}

.p-10 {
  padding: 2.5rem;
}

.p-2 {
  padding: .5rem;
}

.p-4 {
  padding: 1rem;
}

.p-6 {
  padding: 1.5rem;
}

.p-8 {
  padding: 2rem;
}

.px-2 {
  padding-left: .5rem;
  padding-right: .5rem;
}

.px-3 {
  padding-left: .75rem;
  padding-right: .75rem;
}

.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}

.px-6 {
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

.py-1 {
  padding-top: .25rem;
  padding-bottom: .25rem;
}

.py-1\.5 {
  padding-top: .375rem;
  padding-bottom: .375rem;
}

.py-2 {
  padding-top: .5rem;
  padding-bottom: .5rem;
}

.py-20 {
  padding-top: 5rem;
  padding-bottom: 5rem;
}

.py-3 {
  padding-top: .75rem;
  padding-bottom: .75rem;
}

.py-4 {
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.py-6 {
  padding-top: 1.5rem;
  padding-bottom: 1.5rem;
}

.pl-2 {
  padding-left: .5rem;
}

.pl-4 {
  padding-left: 1rem;
}

.pl-8 {
  padding-left: 2rem;
}

.pr-2 {
  padding-right: .5rem;
}

.pr-2\.5 {
  padding-right: .625rem;
}

.pr-8 {
  padding-right: 2rem;
}

.pt-4 {
  padding-top: 1rem;
}

.text-center {
  text-align: center;
}

.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}

.text-4xl {
  font-size: 2.25rem;
  line-height: 2.5rem;
}

.text-base {
  font-size: 1rem;
  line-height: 1.5rem;
}

.text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
}

.text-sm {
  font-size: .875rem;
  line-height: 1.25rem;
}

.text-xl {
  font-size: 1.25rem;
  line-height: 1.75rem;
}

.text-xs {
  font-size: .75rem;
  line-height: 1rem;
}

.font-bold {
  font-weight: 700;
}

.font-medium {
  font-weight: 500;
}

.font-semibold {
  font-weight: 600;
}

.leading-none {
  line-height: 1;
}

.tracking-widest {
  letter-spacing: .1em;
}

.text-base-content {
  color: var(--color-base-content);
}

.text-error {
  color: var(--color-error);
}

.text-gray-600 {
  --tw-text-opacity: 1;
  color: rgb(75 85 99 / var(--tw-text-opacity, 1));
}

.text-neutral-content {
  color: var(--color-neutral-content);
}

.text-primary {
  color: var(--color-primary);
}

.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity, 1));
}

.underline {
  text-decoration-line: underline;
}

.underline-offset-4 {
  text-underline-offset: 4px;
}

.antialiased {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.opacity-50 {
  opacity: .5;
}

.shadow {
  --tw-shadow: 0 1px 3px 0 #0000001a, 0 1px 2px -1px #0000001a;
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-lg {
  --tw-shadow: 0 10px 15px -3px #0000001a, 0 4px 6px -4px #0000001a;
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-md {
  --tw-shadow: 0 4px 6px -1px #0000001a, 0 2px 4px -2px #0000001a;
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-sm {
  --tw-shadow: 0 1px 2px 0 #0000000d;
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.outline-none {
  outline-offset: 2px;
  outline: 2px solid #0000;
}

.outline {
  outline-style: solid;
}

.transition {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter, backdrop-filter;
  transition-duration: .15s;
  transition-timing-function: cubic-bezier(.4, 0, .2, 1);
}

.transition-\[color\,box-shadow\] {
  transition-property: color, box-shadow;
  transition-duration: .15s;
  transition-timing-function: cubic-bezier(.4, 0, .2, 1);
}

.transition-all {
  transition-property: all;
  transition-duration: .15s;
  transition-timing-function: cubic-bezier(.4, 0, .2, 1);
}

.duration-150 {
  transition-duration: .15s;
}

.duration-300 {
  transition-duration: .3s;
}

.\[perspective\:1000px\] {
  perspective: 1000px;
}

@plugin "daisyui" {
  themes: nord --default, dim --prefersdark;
}

.selection\:bg-primary ::-moz-selection {
  background-color: var(--color-primary);
}

.selection\:bg-primary ::selection {
  background-color: var(--color-primary);
}

.selection\:bg-primary::-moz-selection {
  background-color: var(--color-primary);
}

.selection\:bg-primary::selection {
  background-color: var(--color-primary);
}

.file\:inline-flex::file-selector-button {
  display: inline-flex;
}

.file\:h-7::file-selector-button {
  height: 1.75rem;
}

.file\:border-0::file-selector-button {
  border-width: 0;
}

.file\:bg-transparent::file-selector-button {
  background-color: #0000;
}

.file\:text-sm::file-selector-button {
  font-size: .875rem;
  line-height: 1.25rem;
}

.file\:font-medium::file-selector-button {
  font-weight: 500;
}

.hover\:bg-accent:hover {
  background-color: var(--color-accent);
}

.hover\:underline:hover {
  text-decoration-line: underline;
}

.focus\:bg-accent:focus {
  background-color: var(--color-accent);
}

.focus-visible\:outline-1:focus-visible {
  outline-width: 1px;
}

.focus-visible\:ring-\[3px\]:focus-visible {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.disabled\:pointer-events-none:disabled {
  pointer-events: none;
}

.disabled\:cursor-not-allowed:disabled {
  cursor: not-allowed;
}

.disabled\:opacity-50:disabled {
  opacity: .5;
}

.group\/sidebar:hover .group-hover\/sidebar\:translate-x-1 {
  --tw-translate-x: .25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.peer:disabled ~ .peer-disabled\:cursor-not-allowed {
  cursor: not-allowed;
}

.peer:disabled ~ .peer-disabled\:opacity-50 {
  opacity: .5;
}

.has-\[\>svg\]\:px-2\.5:has( > svg) {
  padding-left: .625rem;
  padding-right: .625rem;
}

.has-\[\>svg\]\:px-3:has( > svg) {
  padding-left: .75rem;
  padding-right: .75rem;
}

.has-\[\>svg\]\:px-4:has( > svg) {
  padding-left: 1rem;
  padding-right: 1rem;
}

.data-\[disabled\]\:pointer-events-none[data-disabled] {
  pointer-events: none;
}

.data-\[size\=default\]\:h-9[data-size="default"] {
  height: 2.25rem;
}

.data-\[size\=sm\]\:h-8[data-size="sm"] {
  height: 2rem;
}

.data-\[side\=bottom\]\:translate-y-1[data-side="bottom"] {
  --tw-translate-y: .25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.data-\[side\=left\]\:-translate-x-1[data-side="left"] {
  --tw-translate-x: -.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.data-\[side\=right\]\:translate-x-1[data-side="right"] {
  --tw-translate-x: .25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.data-\[side\=top\]\:-translate-y-1[data-side="top"] {
  --tw-translate-y: -.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.data-\[state\=open\]\:bg-accent[data-state="open"] {
  background-color: var(--color-accent);
}

.data-\[inset\]\:pl-8[data-inset] {
  padding-left: 2rem;
}

.data-\[disabled\]\:opacity-50[data-disabled] {
  opacity: .5;
}

.\*\:data-\[slot\=select-value\]\:line-clamp-1[data-slot="select-value"] > * {
  -webkit-line-clamp: 1;
  -webkit-box-orient: vertical;
  display: -webkit-box;
  overflow: hidden;
}

.\*\:data-\[slot\=select-value\]\:flex[data-slot="select-value"] > * {
  display: flex;
}

.\*\:data-\[slot\=select-value\]\:items-center[data-slot="select-value"] > * {
  align-items: center;
}

.\*\:data-\[slot\=select-value\]\:gap-2[data-slot="select-value"] > * {
  gap: .5rem;
}

.data-\[active\=true\]\:hover\:bg-accent:hover[data-active="true"], .data-\[state\=open\]\:hover\:bg-accent:hover[data-state="open"], .data-\[active\=true\]\:focus\:bg-accent:focus[data-active="true"], .data-\[state\=open\]\:focus\:bg-accent:focus[data-state="open"] {
  background-color: var(--color-accent);
}

.group[data-disabled="true"] .group-data-\[disabled\=true\]\:pointer-events-none {
  pointer-events: none;
}

.group\/navigation-menu[data-viewport="false"] .group-data-\[viewport\=false\]\/navigation-menu\:top-full {
  top: 100%;
}

.group\/navigation-menu[data-viewport="false"] .group-data-\[viewport\=false\]\/navigation-menu\:mt-1\.5 {
  margin-top: .375rem;
}

.group[data-state="open"] .group-data-\[state\=open\]\:rotate-180 {
  --tw-rotate: 180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.group\/navigation-menu[data-viewport="false"] .group-data-\[viewport\=false\]\/navigation-menu\:overflow-hidden {
  overflow: hidden;
}

.group\/navigation-menu[data-viewport="false"] .group-data-\[viewport\=false\]\/navigation-menu\:rounded-md {
  border-radius: .375rem;
}

.group\/navigation-menu[data-viewport="false"] .group-data-\[viewport\=false\]\/navigation-menu\:border {
  border-width: 1px;
}

.group[data-disabled="true"] .group-data-\[disabled\=true\]\:opacity-50 {
  opacity: .5;
}

.group\/navigation-menu[data-viewport="false"] .group-data-\[viewport\=false\]\/navigation-menu\:shadow {
  --tw-shadow: 0 1px 3px 0 #0000001a, 0 1px 2px -1px #0000001a;
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.group\/navigation-menu[data-viewport="false"] .group-data-\[viewport\=false\]\/navigation-menu\:duration-200 {
  transition-duration: .2s;
}

.dark\:bg-base-200:is(.dark *) {
  background-color: var(--color-base-200);
}

@media (width >= 640px) {
  .sm\:grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .sm\:overflow-visible {
    overflow: visible;
  }
}

@media (width >= 768px) {
  .md\:absolute {
    position: absolute;
  }

  .md\:flex {
    display: flex;
  }

  .md\:hidden {
    display: none;
  }

  .md\:w-\[var\(--radix-navigation-menu-viewport-width\)\] {
    width: var(--radix-navigation-menu-viewport-width);
  }

  .md\:w-auto {
    width: auto;
  }

  .md\:grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }

  .md\:flex-col {
    flex-direction: column;
  }

  .md\:text-sm {
    font-size: .875rem;
    line-height: 1.25rem;
  }
}

.\[\&_svg\:not\(\[class\*\=\'size-\'\]\)\]\:size-4 svg:not([class*="size-"]) {
  width: 1rem;
  height: 1rem;
}

.\[\&_svg\]\:pointer-events-none svg {
  pointer-events: none;
}

.\[\&_svg\]\:shrink-0 svg {
  flex-shrink: 0;
}


/*# sourceMappingURL=styles_globals_79636149.css.map*/