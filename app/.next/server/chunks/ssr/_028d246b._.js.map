{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/feget/OneDrive/Desktop/drippi/app/context/AuthContext.ts"],"sourcesContent":["import { createContext } from 'react'\r\nimport type { AuthContextType } from './AuthProvider'\r\n\r\nexport const AuthContext = createContext<AuthContextType | undefined>(undefined)"],"names":[],"mappings":";;;AAAA;;AAGO,MAAM,4BAAc,CAAA,GAAA,mGAAA,CAAA,gBAAa,AAAD,EAA+B","debugId":null}},
    {"offset": {"line": 19, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/feget/OneDrive/Desktop/drippi/app/src/lib/csrf.ts"],"sourcesContent":["// reads csrf cookie\r\nexport function getCsrfToken(): string {\r\n    const match = document.cookie.match(/csrftoken=([^;]+)/)\r\n    return match ? match[1] : ''\r\n  }"],"names":[],"mappings":"AAAA,oBAAoB;;;;AACb,SAAS;IACZ,MAAM,QAAQ,SAAS,MAAM,CAAC,KAAK,CAAC;IACpC,OAAO,QAAQ,KAAK,CAAC,EAAE,GAAG;AAC5B","debugId":null}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/feget/OneDrive/Desktop/drippi/app/context/AuthProvider.tsx"],"sourcesContent":["// src/context/AuthProvider.tsx\r\nimport React, { useEffect, useState } from 'react'\r\nimport { AuthContext } from './AuthContext'\r\nimport { getCsrfToken } from '../src/lib/csrf'\r\n\r\nexport interface User {\r\n  username: string\r\n}\r\n\r\nexport interface AuthContextType {\r\n  user: User | null\r\n  login: (username: string, password: string) => Promise<void>\r\n  signup: (username: string, password: string, gender: string) => Promise<void>\r\n  logout: () => Promise<void>\r\n}\r\n\r\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\r\n  const [user, setUser] = useState<User | null>(null)\r\n\r\n  useEffect(() => {\r\n    // Initial “who am I?” check to establish session and CSRF cookie\r\n    fetch('/api/auth/me/', { credentials: 'include' })\r\n      .then(res => (res.ok ? res.json() : Promise.reject()))\r\n      .then(data => setUser({ username: data.username }))\r\n      .catch(() => setUser(null))\r\n  }, [])\r\n\r\n  async function login(username: string, password: string) {\r\n    const res = await fetch('/api/auth/login/', {\r\n      method: 'POST',\r\n      credentials: 'include',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'X-CSRFToken': getCsrfToken(),\r\n      },\r\n      body: JSON.stringify({ username, password }),\r\n    })\r\n    if (!res.ok) throw new Error('Invalid credentials')\r\n    const data = await res.json()\r\n    setUser({ username: data.username })\r\n  }\r\n\r\n  async function signup(username: string, password: string, gender: string) {\r\n    const res = await fetch('/api/auth/register/', {\r\n      method: 'POST',\r\n      credentials: 'include',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'X-CSRFToken': getCsrfToken(),\r\n      },\r\n      body: JSON.stringify({ username, password, gender }),\r\n    })\r\n    if (!res.ok) throw new Error('Signup failed')\r\n    const data = await res.json()\r\n    setUser({ username: data.username })\r\n  }\r\n\r\n  async function logout() {\r\n    await fetch('/api/auth/logout/', {\r\n      method: 'POST',\r\n      credentials: 'include',\r\n      headers: {\r\n        'X-CSRFToken': getCsrfToken(),\r\n      },\r\n    })\r\n    setUser(null)\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, signup, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n"],"names":[],"mappings":"AAAA,+BAA+B;;;;;AAC/B;AACA;AACA;;;;;AAaO,SAAS,aAAa,EAAE,QAAQ,EAAiC;IACtE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAe;IAE9C,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,iEAAiE;QACjE,MAAM,iBAAiB;YAAE,aAAa;QAAU,GAC7C,IAAI,CAAC,CAAA,MAAQ,IAAI,EAAE,GAAG,IAAI,IAAI,KAAK,QAAQ,MAAM,IACjD,IAAI,CAAC,CAAA,OAAQ,QAAQ;gBAAE,UAAU,KAAK,QAAQ;YAAC,IAC/C,KAAK,CAAC,IAAM,QAAQ;IACzB,GAAG,EAAE;IAEL,eAAe,MAAM,QAAgB,EAAE,QAAgB;QACrD,MAAM,MAAM,MAAM,MAAM,oBAAoB;YAC1C,QAAQ;YACR,aAAa;YACb,SAAS;gBACP,gBAAgB;gBAChB,eAAe,CAAA,GAAA,2GAAA,CAAA,eAAY,AAAD;YAC5B;YACA,MAAM,KAAK,SAAS,CAAC;gBAAE;gBAAU;YAAS;QAC5C;QACA,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM;QAC7B,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,QAAQ;YAAE,UAAU,KAAK,QAAQ;QAAC;IACpC;IAEA,eAAe,OAAO,QAAgB,EAAE,QAAgB,EAAE,MAAc;QACtE,MAAM,MAAM,MAAM,MAAM,uBAAuB;YAC7C,QAAQ;YACR,aAAa;YACb,SAAS;gBACP,gBAAgB;gBAChB,eAAe,CAAA,GAAA,2GAAA,CAAA,eAAY,AAAD;YAC5B;YACA,MAAM,KAAK,SAAS,CAAC;gBAAE;gBAAU;gBAAU;YAAO;QACpD;QACA,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM;QAC7B,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,QAAQ;YAAE,UAAU,KAAK,QAAQ;QAAC;IACpC;IAEA,eAAe;QACb,MAAM,MAAM,qBAAqB;YAC/B,QAAQ;YACR,aAAa;YACb,SAAS;gBACP,eAAe,CAAA,GAAA,2GAAA,CAAA,eAAY,AAAD;YAC5B;QACF;QACA,QAAQ;IACV;IAEA,qBACE,qKAAC,+GAAA,CAAA,cAAW,CAAC,QAAQ;QAAC,OAAO;YAAE;YAAM;YAAO;YAAQ;QAAO;kBACxD;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/feget/OneDrive/Desktop/drippi/app/pages/_app.tsx"],"sourcesContent":["import '../styles/globals.css'\nimport type { AppProps } from 'next/app'\nimport { AuthProvider } from '../context/AuthProvider'\n\nexport default function App({ Component, pageProps }: AppProps) {\n  return (\n    <AuthProvider>\n      <Component {...pageProps} />\n    </AuthProvider>\n  )\n}"],"names":[],"mappings":";;;;AAEA;;;;AAEe,SAAS,IAAI,EAAE,SAAS,EAAE,SAAS,EAAY;IAC5D,qBACE,qKAAC,iHAAA,CAAA,eAAY;kBACX,cAAA,qKAAC;YAAW,GAAG,SAAS;;;;;;;;;;;AAG9B","debugId":null}}]
}